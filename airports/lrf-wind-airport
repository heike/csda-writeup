
airport <- 'phx'
load(sprintf('%s-all.rds', airport)) # loads object flights_all
load(sprintf('%s-winds.rds', airport)) # loads object winds

flights_all$Wind_Direction<- factor(flights_all$Wind_Direction)
flights_all$Wind_Direction <- with(flights_all, reorder(Wind_Direction, WindDirDegrees, median, na.rm=T))
# check data quality
idx <- which(is.na(flights_all$Wind_SpeedMPH))
flights_all$WindDirDegrees[idx] <- NA
flights_all$Hour <- hour(flights_all$wstamp)

flights_sub <- subset(flights_all, (Hour >= 7) & (Wind_SpeedMPH>=quantile(winds$Wind_SpeedMPH, 0.5, na.rm=TRUE)))
n <- nrow(flights_sub)
fwind <- table(flights_sub$WindDirDegrees, useNA="ifany")/n
flights_sub$nf <- flights_sub$nextflight
flights_sub$nf[flights_sub$nf>=8] <- 8

fwindflight <- table(flights_sub$Wind_Direction, flights_sub$nf, useNA="ifany")/n
dev.new()
plot(fwindflight, off=c(0,0), col=0:8)
qplot(WindDirDegrees, nextflight, data = subset(flights_all, Hour >=7))

library(ggplot2)
qplot(Hour, nextflight, data=flights_all)+geom_smooth()
dev.new()
qplot(x = nextflight, geom="boxplot", data = flights_all)

#SEA
drv <- dbDriver("MySQL")
co <- dbConnect(drv, user="2009Expo", password="R R0cks", port=3306, dbname="data_expo_2009", host="headnode.stat.iastate.edu")
ar <- dbGetQuery(co, "select * from airportsR")
sea <- subset(ar, iata == "SEA")
setwd("C:\\Users\\Owner\\Documents\\csda-writeup")
library(ggplot2)
library(RgoogleMaps)
library(rgdal)
source("code/ggooglemaps.R")

map_center <- c(lon=sea$longitude, lat=sea$latitude)
sat_map <-ggooglemap(center = map_center, zoom = 14, maptype='hybrid', n_pix=640)
save(sat_map, file="SEA.rds") 
good_sea <- geom_segment(aes(x = sea$longitude, y = sea$latitude, xend = sea$longitude + cos(295-180), yend = sea$latitude+ 2*sin(295-180)), colour = "green",data = sea)
bad_sea <-  geom_segment(aes(x = sea$longitude, y = sea$latitude, xend = sea$longitude + cos(135-180), yend = sea$latitude+ 2*sin(135-180)), colour = "red",data = sea)
sea_origin <- geom_point(aes(x = longitude, y = latitude), data = sea)

ggplot() +
 geom_tile(aes(lon, lat, fill=fill), data = sat_map) +
   scale_fill_identity(legend = F) +
  scale_x_continuous('Longitude') + 
  scale_y_continuous('Latitude') +  
 coord_equal() + theme_nothing() + stat_spoke(aes(x = sea$longitude, y = sea$latitude, angle=(95-180)), colour = "green", radius = 0.01)+ 
 stat_spoke(aes(x = sea$longitude, y = sea$latitude, angle=(135-180)), colour = "red", radius = 0.01) 

